name: Build desktop apps
on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, windows-latest, ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Tk on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y python3-tk

      - name: Install PyInstaller
        run: python -m pip install --upgrade pip pyinstaller

      # ---- Build per OS ----
      - name: Build macOS app
        if: runner.os == 'macOS'
        shell: bash
        run: |
          ICON=""
          [ -f assets/icon.icns ] && ICON="--icon assets/icon.icns"
          python -m PyInstaller --windowed $ICON --name "Unity WebGL Server" UnityWebGLServer.py

      - name: Build Windows app
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $icon = (Test-Path 'assets\icon.ico') ? '--icon assets\icon.ico' : ''
          python -m PyInstaller --noconsole $icon --name "Unity WebGL Server" UnityWebGLServer.py

      - name: Build Linux app
        if: runner.os == 'Linux'
        shell: bash
        run: |
          ICON=""
          [ -f assets/icon.png ] && ICON="--icon assets/icon.png"
          python -m PyInstaller --noconsole $ICON --name "unity-webgl-server" UnityWebGLServer.py

      # ---- Package per OS ----
      - name: Package macOS (.zip)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          mkdir -p release
          ditto -c -k --sequesterRsrc --keepParent "dist/Unity WebGL Server.app" \
            "release/Unity-WebGL-Server-macOS-${{ runner.arch }}.zip"

      - name: Package Windows (.zip)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release | Out-Null
          Compress-Archive -Path 'dist/Unity WebGL Server/*' `
            -DestinationPath "release/Unity-WebGL-Server-windows-${{ runner.arch }}.zip" -Force

      - name: Package Linux (tar.gz)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          mkdir -p release
          tar -czf "release/unity-webgl-server-linux-${{ runner.arch }}.tar.gz" -C dist unity-webgl-server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}
          path: release/*
          retention-days: 30
